version: "3"

# Taskfile for DotNetApiDiff project
# https://taskfile.dev

vars:
  SOLUTION: DotNetApiDiff.sln
  PROJECT: src/DotNetApiDiff/DotNetApiDiff.csproj
  TEST_PROJECT: tests/DotNetApiDiff.Tests/DotNetApiDiff.Tests.csproj
  COVERAGE_DIR: coverage-report
  REPORT_DIR: reports

tasks:
  default:
    desc: Lists all available tasks
    cmds:
      - task --list

  build:
    desc: Build the solution
    cmds:
      - dotnet build {{.SOLUTION}} --configuration Release

  clean:
    desc: Clean build outputs
    cmds:
      - dotnet clean {{.SOLUTION}}
      - task: clean:coverage

  clean:coverage:
    desc: Clean coverage reports
    cmds:
      - npx rimraf {{.COVERAGE_DIR}}

  restore:
    desc: Restore NuGet packages
    cmds:
      - dotnet restore {{.SOLUTION}}

  test:
    desc: Run all tests
    cmds:
      - dotnet test {{.SOLUTION}} --configuration Release

  test:unit:
    desc: Run unit tests only
    cmds:
      - dotnet test {{.TEST_PROJECT}} --filter "Category=Unit" --configuration Release

  test:integration:
    desc: Run integration tests only
    cmds:
      - dotnet test {{.TEST_PROJECT}} --filter "Category=Integration" --configuration Release

  coverage:
    desc: Generate code coverage report
    cmds:
      - dotnet test {{.TEST_PROJECT}} /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=./coverage.info
      - mkdir -p {{.COVERAGE_DIR}}
      - task: coverage:report

  coverage:report:
    desc: Generate HTML report from coverage data
    cmds:
      - dotnet tool restore
      - dotnet reportgenerator -reports:tests/DotNetApiDiff.Tests/coverage.info -targetdir:{{.COVERAGE_DIR}} -reporttypes:Html

  coverage:view:
    desc: Open coverage report in default browser
    platforms:
      windows:
        cmds:
          - cmd.exe /c start {{.COVERAGE_DIR}}/index.html
      darwin:
        cmds:
          - open {{.COVERAGE_DIR}}/index.html
      linux:
        cmds:
          - xdg-open {{.COVERAGE_DIR}}/index.html

  tools:install:
    desc: Install required dotnet tools
    cmds:
      - dotnet new tool-manifest --force || true
      - dotnet tool install dotnet-reportgenerator-globaltool --ignore-failed-sources --version 5.2.0

  tools:restore:
    desc: Restore dotnet tools
    cmds:
      - dotnet tool restore

  deps:install:
    desc: Install npm dependencies
    cmds:
      - npm install

  run:
    desc: Run the application
    cmds:
      - dotnet run --project {{.PROJECT}} -- {{.CLI_ARGS}}

  publish:
    desc: Publish the application
    cmds:
      - dotnet publish {{.PROJECT}} -c Release -o ./publish

  ci:
    desc: Run CI build and test sequence
    cmds:
      - task: deps:install
      - task: clean
      - task: restore
      - task: build
      - task: test
      - task: coverage
